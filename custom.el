(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(appt-display-format (quote window))
 '(appt-message-warning-time 10)
 '(auto-save-interval 300)
 '(auto-save-timeout 10)
 '(backup-by-copying t)
 '(backup-directory-alist (list (cons "." (expand-file-name "backup" user-emacs-directory))))
 '(blink-cursor-delay 2)
 '(blink-cursor-interval 0.5)
 '(blink-cursor-mode t)
 '(bmkp-last-as-first-bookmark-file "~/.emacs.d/bookmarks")
 '(calendar-week-start-day 1)
 '(coffee-cleanup-whitespace nil)
 '(compilation-auto-jump-to-first-error nil)
 '(compilation-context-lines 5)
 '(compilation-scroll-output (quote first-error))
 '(compilation-window-height 11)
 '(current-language-environment "UTF-8")
 '(default-major-mode (quote text-mode) t)
 '(delete-by-moving-to-trash t)
 '(delete-old-versions t)
 '(desktop-base-file-name ".emacs.desktop")
 '(desktop-clear-preserve-buffers (list "\\*scratch\\*" "\\*Messages\\*" "\\*server\\*" "\\*tramp/.+\\*" "\\*Warnings\\*" "\\*Org Agenda\\*" ".*\\.org"))
 '(desktop-load-locked-desktop t)
 '(desktop-path (list "." user-emacs-directory))
 '(desktop-restore-eager 14)
 '(desktop-save (quote ask-if-new))
 '(diary-file (concat my-dropbox-dir "diary"))
 '(dired-dwim-target t)
 '(dired-omit-files (rx (or (seq bol "#") (seq bol ".") (seq "~" eol) (seq bol "svn" eol) (seq bol "_region_") (seq bol "prv" (* anything) ".log" eol) (seq bol "cscope.files" eol) (seq bol "GPATH" eol) (seq bol "GRTAGS" eol) (seq bol "GSYMS" eol) (seq bol "GTAGS" eol))))
 '(dired-omit-verbose nil)
 '(dired-recursive-copies (quote top))
 '(dired-recursive-deletes (quote top))
 '(enable-local-variables :safe)
 '(enable-recursive-minibuffers t)
 '(eproject-completing-read-function (quote eproject--ido-completing-read))
 '(fill-column 78)
 '(git-state-modeline-decoration (quote git-state-decoration-large-dot))
 '(helm-c-use-standard-keys t)
 '(helm-command-prefix-key "M-S")
 '(helm-enable-shortcuts (quote prefix))
 '(helm-idle-delay 0.3)
 '(helm-input-idle-delay 0)
 '(helm-quick-update nil)
 '(ido-enable-flex-matching t)
 '(ido-enable-regexp nil)
 '(ido-everywhere t)
 '(ido-read-file-name-as-directory-commands nil)
 '(ido-use-filename-at-point nil)
 '(indent-tabs-mode nil)
 '(indicate-buffer-boundaries (quote right))
 '(indicate-empty-lines nil)
 '(inhibit-startup-echo-area-message t)
 '(inhibit-startup-screen t)
 '(iy-frame-font "Inconsolata:pixelsize=18")
 '(iy-frame-font-chinese "Mono:pixelsize=18")
 '(iy-go-to-char-key-backward 58)
 '(kept-new-versions 20)
 '(kept-old-versions 2)
 '(kill-ring-max 500)
 '(kill-whole-line t)
 '(locale-coding-system (quote utf-8) t)
 '(magit-process-popup-time 60)
 '(magit-repo-dirs (list my-codebase-dir))
 '(magit-repo-dirs-depth 1)
 '(menu-bar-mode nil)
 '(minibuffer-depth-indicate-mode t)
 '(mouse-yank-at-point t)
 '(org-agenda-skip-deadline-if-done t)
 '(org-agenda-skip-scheduled-if-done t)
 '(org-agenda-skip-timestamp-if-done t)
 '(org-agenda-span 7)
 '(org-agenda-tags-column -80)
 '(org-agenda-time-grid (quote ((daily today require-timed remove-match) "----------------" (930 1000 1200 1400 1600 1800 2000 2200 2400 2500))))
 '(org-agenda-todo-ignore-with-date t)
 '(org-agenda-todo-list-sublevels t)
 '(org-clock-history-length 35)
 '(org-clock-idle-time 30)
 '(org-clock-in-resume nil)
 '(org-clock-in-switch-to-state "GOING")
 '(org-clock-into-drawer "CLOCK")
 '(org-clock-out-switch-to-state (function org-gtd-clock-out-switch-to-pause-if-going))
 '(org-clock-out-when-done t)
 '(org-clock-persist (quote history))
 '(org-columns-default-format "%42ITEM %TODO %3Effort(E){:} %3CLOCKSUM_T(R) %SCHEDULED")
 '(org-combined-agenda-icalendar-file (concat my-dropbox-dir "g/ical/org.ics"))
 '(org-completion-use-ido t)
 '(org-cycle-separator-lines 2)
 '(org-drawers (quote ("PROPERTIES" "LOGBOOK" "CLOCK")))
 '(org-enforce-todo-checkbox-dependencies t)
 '(org-enforce-todo-dependencies t)
 '(org-export-backends (quote (md html icalendar latex beamer)))
 '(org-extend-today-until 2)
 '(org-file-apps (quote ((t . emacs) (system . "open %s"))))
 '(org-global-properties (quote (("STYLE_ALL" . "habit"))))
 '(org-icalendar-store-UID t)
 '(org-icalendar-use-scheduled (quote (todo-start event-if-todo)))
 '(org-log-into-drawer t)
 '(org-modules (quote (org-bibtex org-bookmark org-expiry org-habit org-id org-info org-inlinetask org-man org-w3m org-clock org-timer org-protocol org-drill org-mu4e)))
 '(org-outline-path-complete-in-steps nil)
 '(org-priority-faces (quote ((65 :foreground "red" :weight bold) (66 :foreground "#94bff3" :weight bold) (67 :foreground "#6f6f6f"))))
 '(org-read-date-prefer-future (quote time))
 '(org-refile-targets (quote ((org-agenda-files :maxlevel . 3) (quote (:maxlevel . 3)))))
 '(org-refile-use-outline-path (quote file))
 '(org-show-following-heading t)
 '(org-show-hierarchy-above t)
 '(org-show-siblings nil)
 '(org-special-ctrl-a/e t)
 '(org-special-ctrl-k t)
 '(org-stuck-projects (quote ("project/-DONE-CANCELED" ("GOING") ("next") "")))
 '(org-tag-alist (quote ((:startgroup) ("@home" . 104) ("@errands" . 101) ("@computer" . 99) ("@reading" . 114) ("@phone" . 112) ("@message" . 109) (:endgroup) ("project" . 120) ("event" . 118) ("idea" . 105) ("next" . 110))))
 '(org-tags-column -80)
 '(org-tags-exclude-from-inheritance (quote ("project")))
 '(org-todo-keyword-faces (quote (("TODO" :foreground "coral3" :weight bold) ("GOING" :foreground "green" :weight bold) ("PAUSE" :foreground "yellow" :weight bold))))
 '(org-todo-keywords (quote ((sequence "TODO(t)" "GOING(g)" "PAUSE(p)" "WAITING(w@)" "LATER(l)" "|" "DONE(d!/@)" "SOMEDAY(s)" "CANCELED(c@)"))))
 '(org-todo-state-tags-triggers (quote (("WAITING" ("next")) ("LATER" ("next")) ("DONE" ("next")) ("SOMEDAY" ("next")) ("CANCELED" ("next")) ("GOING" ("next" . t)))))
 '(org-use-fast-todo-selection t)
 '(org-yank-adjusted-subtrees nil)
 '(recentf-arrange-rules (quote (("Elisp files (%d)" ".\\.el\\'") ("Java files (%d)" ".\\.java\\'") ("C/C++ files (%d)" ".\\.c\\(pp\\)?\\'" ".\\.h\\(pp\\)?\\'") ("Org files (%d)" ".\\.org\\'"))))
 '(recentf-exclude (quote ("semantic\\.cache" "COMMIT_EDITMSG" "git-emacs-tmp.*" "\\.breadcrumb" "\\.ido\\.last" "\\.projects.ede" "/g/org/")))
 '(recentf-max-saved-items 200)
 '(recentf-menu-filter (quote recentf-arrange-by-rule))
 '(safe-local-variable-values (quote ((encoding . utf-8) (outline-minor-mode . t))))
 '(scroll-bar-mode nil)
 '(set-mark-command-repeat-pop t)
 '(setq org-fontify-done-headline)
 '(show-paren-mode t)
 '(tab-width 2)
 '(tool-bar-mode nil)
 '(tramp-default-method-alist (quote (("\\`localhost\\'" "\\`root\\'" "sudo"))))
 '(use-dialog-box nil)
 '(use-file-dialog nil)
 '(vc-follow-symlinks t)
 '(vc-make-backup-files t)
 '(version-control t)
 '(visible-bell t)
 '(whitespace-action (quote (cleanup)))
 '(whitespace-global-modes (quote (emacs-lisp-mode ruby-mode coffee-mode sass-mode css-mode haml-mode python-mode go-mode)))
 '(whitespace-line-column fill-column)
 '(whitespace-style (quote (face tabs trailing newline indentation space-before-tab tab-mark newline-mark)))
 '(x-select-enable-clipboard t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
